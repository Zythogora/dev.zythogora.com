model BetterAuthUsers {
  id            String     @id
  name          String
  email         String
  emailVerified Boolean
  image         String?
  createdAt     DateTime
  updatedAt     DateTime
  sessions      Sessions[]
  accounts      Accounts[]

  user Users?

  @@unique([email])
  @@map("users")
  @@schema("authentication")
}

model Sessions {
  id        String          @id
  expiresAt DateTime
  token     String
  createdAt DateTime
  updatedAt DateTime
  ipAddress String?
  userAgent String?
  userId    String
  user      BetterAuthUsers @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([token])
  @@map("sessions")
  @@schema("authentication")
}

model Accounts {
  id                    String          @id
  accountId             String
  providerId            String
  userId                String
  user                  BetterAuthUsers @relation(fields: [userId], references: [id], onDelete: Cascade)
  accessToken           String?
  refreshToken          String?
  idToken               String?
  accessTokenExpiresAt  DateTime?
  refreshTokenExpiresAt DateTime?
  scope                 String?
  password              String?
  createdAt             DateTime
  updatedAt             DateTime

  @@map("accounts")
  @@schema("authentication")
}

model Verifications {
  id         String    @id
  identifier String
  value      String
  expiresAt  DateTime
  createdAt  DateTime?
  updatedAt  DateTime?

  @@map("verifications")
  @@schema("authentication")
}
